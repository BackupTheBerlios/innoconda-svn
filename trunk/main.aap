
@globs = {}
@execfile("inno/version.py", globs)
version =           `globs['version']`

# find .py files that may change, requiring a rebuild
@from inno.fmlang import sourceItems
@fm_script = """chdir inno
@            add **/*.py
@            add LICENSE.*
@            add *.txt
@            add test/data/test_fmlang.zip
@            add test/data/simple.iss"""
@items = ' '.join(sourceItems(fm_script))
package_files =     inno/$*items

all_targets =       innoconda-$version-setup.exe

all: $all_targets
    :print :Done with $source

innoconda-$version-setup.exe: innosetup422.zip{fetch = http://twistedmatrix.com/~moonfallen/innosetup422.zip} $(package_files)
    :pushdir inno
    :sys unzip -oq ../innosetup422.zip
    :popdir
    :python
        import inno
        scr = inno.PythonScript(display_name="Innoconda", 
                                name="innoconda",
                                package_version=_no.version,)
        scr.collect("inno", exclude_globs=('*.svn*','*~','*.pyc'))
        scr.compile()

clean:
    :del {f} $all_targets innoconda.iss
